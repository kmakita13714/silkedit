'use strict'

const silkedit = require('silkedit');
  
// class InputDialog
function InputDialog(labelText, initialText, validator) {
  this.dialog = new silkedit.Dialog;
  this.dialog.resize(500, 108);
  this.rootLayout = new silkedit.VBoxLayout;
  const label = new silkedit.Label(labelText);
  this.lineEdit = new silkedit.LineEdit(initialText);
  this.lineEdit.setValidator(validator);
  const buttonBox = new silkedit.DialogButtonBox;
  buttonBox.on('accepted', () => this.dialog.accept());
  buttonBox.on('rejected', () => this.dialog.reject());
    
  this.lineEdit.on('textChanged', (text) => {
    buttonBox.button(silkedit.DialogButtonBox.StandardButton.Ok).setEnabled(this.lineEdit.hasAcceptableInput());
  });

  buttonBox.orientation = silkedit.Orientation.Horizontal;
  buttonBox.standardButtons = silkedit.DialogButtonBox.StandardButton.Ok | silkedit.DialogButtonBox.StandardButton.Cancel;
  this.rootLayout.addWidget(label);
  this.rootLayout.addWidget(this.lineEdit);
  this.rootLayout.addWidget(buttonBox);
  this.dialog.setLayout(this.rootLayout);
}

InputDialog.prototype.show = function() {
  this.lineEdit.selectAll();
  this.lineEdit.emit('textChanged', this.lineEdit.text);
  const result = this.dialog.exec();
  return result === silkedit.Dialog.DialogCode.Accepted ? this.lineEdit.text : null;
}

module.exports = InputDialog;