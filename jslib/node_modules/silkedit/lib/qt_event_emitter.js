'use strict';
const util = require('util');
const EventEmitter = require('events');

module.exports = function(bridge) {
  function QtEventEmitter() {}

  QtEventEmitter.prototype.addListener = function(event, listener) {
    QtEventEmitter.prototype.on(event, listener);
    return this;
  }

  QtEventEmitter.prototype.on = function(event, listener) {
    bridge.connect.call(this, event);
    EventEmitter.prototype.on(event, listener);
    return this;
  }

  QtEventEmitter.prototype.once = function(event, listener) {
    throw new Error("once is not supported");
  }

  QtEventEmitter.prototype.removeAllListeners = function(event) {
    EventEmitter.prototype.removeAllListeners(event);
    bridge.disconnect.call(this, event);
    return this;
  }

  QtEventEmitter.prototype.removeListener = function(event, listener) {
    EventEmitter.prototype.removeListener(event, listener);
    if (EventEmitter.prototype.listenerCount(event) == 0) {
      bridge.disconnect.call(this, event);
    } else {
      console.log(`EventEmitter.prototype.listenerCount(event): ${EventEmitter.prototype.listenerCount(event)}`);
    }
    return this;
  }

  util.inherits(QtEventEmitter, EventEmitter);

  return QtEventEmitter;
};