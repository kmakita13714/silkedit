#!/bin/bash

alias qmake=~/Qt/5.3/clang_64/bin/qmake
alias macdeployqt=~/Qt/5.3/clang_64/bin/macdeployqt

LIGHT_GREEN='\x1B[0;32m'
NC='\x1B[0m' # No Color

pre_commit() {
	  # clang-format
		find . -name \*.cpp -or -name \*.h | xargs clang-format -i

		# clang-check
		cmake ../sk-build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -G Ninja -DCMAKE_BUILD_TYPE=Debug
		result=$(find src -name '*.cpp'|xargs clang-check -p ../sk-build 2>&1)
		if [ $(echo ${result} | grep warning -c) -ne 0 ]
		then
			echo "${result}"
			exit 1
		fi

		echo -e "${LIGHT_GREEN}Good to commit!${NC}"
}

check() {
		find src -name '*.cpp'|xargs clang-check -p ../sk-build 2>&1
}

clean() {
	  if [ -f Makefile ]; then
			make clean
	  fi

		files=(.qmake.stash Makefile sk.app sk.dmg dmg)

		for (( i = 0; i < ${#files[*]}; i++ )) {
			echo "Removing ${files[i]}"
			rm -rf ${files[i]}
		}
}

build() {
	  #qmake -r
		cmake CMakeLists.txt -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -G Ninja; ninja

	  #if [ -f Makefile ]; then
	  if [ -f build.ninja ]; then
			#make
			ninja
	  fi

		macdeployqt sk.app
		mkdir dmg
		cp -r sk.app dmg
		ln -s /Applications dmg/Applications
		hdiutil create -volname sk -srcfolder dmg -ov -format UDZO sk.dmg
}

case "$1" in
  build)
		build
    echo
    ;;

	check)
		check
		echo
		;;

  clean)
    clean
    echo
    ;;

	pre-commit)
		pre_commit
		echo
		;;

  *)
    echo $"Usage: $0 {build|check|clean|pre-commit}"
    exit 1
esac

exit 0
